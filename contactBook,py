from bson import json_util
from flask import Flask, request
from flask_cors import CORS, cross_origin
import pymongo
import json

app = Flask(__name__)
CORS(app, support_credentials=True)


myclient = pymongo.MongoClient("mongodb://localhost:27017/")
mydb = myclient["local"]
mycol = mydb["contacts"]


@app.route('/register', methods = ['POST'])
def register():
    name = request.get_json()["name"].strip()
    phoneNumber = request.get_json()["phoneNumber"].strip()
    if(name != "" and phoneNumber!= ""):
        p = mycol.find({"name": name})
        n = mycol.find({"phoneNumber": phoneNumber})
        if (len(list(n)) == 0 and len(list(p)) == 0):
            mydict = {"name": name, "phoneNumber": phoneNumber}
            mycol.insert_one(mydict)
            return "inserted successfully"

        else:
            return "phone number already exists"
@cross_origin(supports_credentials=True)
@app.route('/find/<name>')
def find(name=""):
    print(name)
    p = mycol.find({"name": name})
    print("response : " +  str(json.loads(json_util.dumps(p[0]))))
    return json.loads(json_util.dumps(p[0]))

@app.route('/update/<name>/<phoneNumber>')
def update(name="", phoneNumber=""):
    n = mycol.find({"phoneNumber": phoneNumber})
    if(len(list(n)) != 0):
        mycol.update_one({"phoneNumber": phoneNumber}, {"$set": {"name": name}})
        return "updated successfully"
    else:
        return "phone number does not exists"


@app.route('/delete/<phoneNumber>')
def delete(phoneNumber:""):
    n = mycol.find({"phoneNumber": phoneNumber})
    mycol.delete_one(n[0])
    return "deleted successfully"


if __name__=='__main__':
    app.run(debug=True,port=8066)

